# Stage 1: Install dependencies and build the application
FROM node:22-alpine AS build

WORKDIR /app

# Enable Corepack, set Yarn 4.9.1 and add node_modules linker
RUN corepack enable && corepack prepare yarn@4.9.2 --activate
RUN echo 'nodeLinker: "node-modules"' > ./.yarnrc.yml

# Copy all monorepo files
COPY . .

# Install all dependencies
RUN yarn workspace @portfolio/frontend install --immutable

# Set environment variables for the build

# Build the application
RUN yarn workspace @portfolio/frontend build

# Stage 2: Production
FROM node:22-alpine AS production

# Create non-root user and group
RUN addgroup -S appgroup && adduser -S appuser -G appgroup

WORKDIR /app

# Enable Corepack, set Yarn 4.9.1 and add node_modules linker
RUN corepack enable && corepack prepare yarn@4.9.2 --activate
RUN echo 'nodeLinker: "node-modules"' > ./.yarnrc.yml

# Copy minimal files for production
COPY --from=build /app/node_modules ./node_modules
COPY --from=build /app/package.json /app/package.json
COPY --from=build /app/yarn.lock /app/yarn.lock
COPY --from=build /app/apps/frontend/package.json ./apps/frontend/package.json
COPY --from=build /app/apps/frontend/dist ./apps/frontend/dist
COPY --from=build /app/apps/frontend/.astro ./apps/frontend/.astro
COPY --from=build /app/apps/frontend/node_modules ./apps/frontend/node_modules

# Install only production dependencies
# RUN yarn workspaces focus --production
RUN yarn workspaces focus @portfolio/frontend --production

# Set environment variables for production
ENV NODE_ENV=production
ENV HOST=0.0.0.0
ENV PORT=4321

# Change ownership of the app directory
RUN chown -R appuser:appgroup /app

EXPOSE 4321

USER appuser

# Start the application
CMD ["node", "/app/apps/frontend/dist/server/entry.mjs"]
